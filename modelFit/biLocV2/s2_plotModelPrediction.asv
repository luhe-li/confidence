
clear; clc; close all; rng('Shuffle');

sub = 4;
ses = 1:2;
models = {'Heuristic','Suboptimal','Optimal'};
m = 3;

flnm = sprintf('FitResults_%s_sub%i_ses%i-%i', models{m}, sub, min(ses), max(ses));

%% manage path
cur_dir      = pwd;
[project_dir, ~]= fileparts(fileparts(cur_dir));
addpath(genpath(fullfile(project_dir,'func')))
out_dir      = fullfile(pwd, mfilename);

%% plot set up

lw = 2;
fontSZ = 15;
titleSZ = 20;
dotSZ = 80;
clt = [30, 120, 180; % blue
    227, 27, 27;  % dark red
    repmat(125, 1, 3)]./255;
%     251, 154, 153]./255; % light red

%% load best fitting parameters

files = dir(fullfile(pwd, [flnm '*.mat']));
load(files(end).name);

% use the best-fitting parameter
p = model.bestP;
num_rep = model.num_rep;

%% analyze real data

[mean_conf, std_mean_conf, uni_pconf, abs_diff,...
    mean_ve, std_ve, raw_diff] = analyze_data(sub,ses);

%% predict from simulation

[pred_mean_conf, pred_std_mean_conf, pred_uni_pconf, ~,...
    pred_mean_ve, pred_std_ve, ~] = pred_data(p, m, num_rep, sub, ses);

%% plot VE

cue_label             = {'Post-cue: A','Post-cue: V'};
num_cue               = numel(cue_label);
rel_label             = {'High reliability','Low reliability'};
num_rel               = numel(rel_label);

figure; hold on
t = tiledlayout(2, 1);
title(t,sprintf('%s, rep: %i', models{m}, num_rep))
xlabel(t, 'Audiovisual discrepancy (deg)');
ylabel(t, 'Shift of localization');
t.TileSpacing = 'compact';
t.Padding = 'compact';

for cue = 1:num_cue

    nexttile
    title(cue_label{cue})
    axis equal
    hold on
    xticks(raw_diff)

    for rel = 1:num_rel

        % plot data
        plot(raw_diff, squeeze(mean_ve(:, cue, rel)), 'o','Color',clt(rel+1,:));

        % plot prediction
        plot(raw_diff, squeeze(pred_mean_ve(:, cue, rel)), '-','Color',clt(rel+1,:));

    end

    yline(0,'--')
    if cue == 1
        plot(raw_diff, raw_diff,'k--')
    else
        plot(raw_diff, -raw_diff,'k--')
    end

end

%% plot confidence report

figure; hold on
t = tiledlayout(2, 1);
title(t,sprintf('%s, rep: %i', models{m}, num_rep))
xlabel(t, 'Absolute audiovisual discrepancy (deg)');
ylabel(t, 'Proportion of confidence report');
t.TileSpacing = 'compact';
t.Padding = 'compact';

for cue = 1:num_cue

    nexttile
    title(cue_label{cue})
    hold on
    xticks(abs_diff)
    ylim([-0.1, 1.1])

    for rel = 1:num_rel

        % plot data
        plot(abs_diff, squeeze(mean_conf(:, cue, rel)), 'o', 'Color',clt(rel+1,:));

        % plot prediction
        plot(abs_diff, squeeze(pred_mean_conf(:, cue, rel)), '-', 'Color',clt(rel+1,:));

        % plot unimodal p_confidence
        plot(abs_diff, uni_pconf, 'Color',clt(rel+1,:));

    end

end