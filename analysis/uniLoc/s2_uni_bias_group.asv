clear; clc; close all;

%% set up

sub_slc = 2;

ses_labels = {'-A','-V'};
num_ses = 2;

% fixed parameters
num_loc = 8;
num_rep = 20;

save_fig = 1;

%% manage path

cur_dir                          = pwd;
[project_dir, ~]                 = fileparts(fileparts(cur_dir));
out_dir                          = fullfile(cur_dir, 's1Fig');
addpath(genpath(fullfile(project_dir, 'data','uniLoc')));
if ~exist(out_dir,'dir') mkdir(out_dir); end

%% clean

[stim, respMu, respSD] = deal(NaN(numel(sub_slc), num_ses, num_loc));
respVar = NaN(numel(sub_slc), num_ses);

for i = 1:numel(sub_slc)

    sub = sub_slc(i);

    for j = 1:num_ses

        ses_label = ses_labels{j};
     
        load(sprintf('uniLoc_sub%i_ses%s', sub, ses_label))

        if strcmp(ses_labels,'-V')

            rel1resp = sortedResp(1:)

        end
        % sort by level
        locRep = reshape([sortedResp(1:end).target_deg],[num_rep,num_loc]);
        stim(i, j, :) = locRep(1,:);
        temp_resp = reshape([sortedResp(1:end).response_deg],[num_rep,num_loc]);

        resp(i, j, :, :) = temp_resp; % subject, session(aud, v1, v2), location, rep

        % estimate bias and variance
        respMu(i, j, :) = mean(temp_resp, 1);
        respSD(i, j, :) = std(temp_resp, [], 1);

        % overall variance
        respVar(i, j) = mean(respSD(i, j, :));

    end

end

%% plot set up

% figure set up
lw = 2;
fontSZ = 15;
titleSZ = 20;
clt = [202,0,32; 5,113,176]./255; % red and blue

%% plot raw responses

figure; hold on
tiledlayout(1,3)

nexttile
set(gca, 'LineWidth', lw, 'FontSize', fontSZ, 'TickDir', 'out')
axis equal
hold on

plot(stim, stim,'k--','LineWidth',lw)

for i = 1:numel(sub_slc)

    sub = sub_slc(i);

    for j = 1:num_ses

        plot([stim(i,j,:)])

    end
end

e = errorbar(stim, squeeze(respMu(i, j, :)),squeeze(respSD(i, j, :)),'LineWidth',lw);
e.CapSize = 0; e.Color = clt(2,:);
xlim([min(stim)-5, max(stim)+5])
ylim([min(stim)-5, max(stim)+5])
title(sprintf('S%i', sub))

switch ses

    case '-A'
        xlabel('Auditory stimulus location (dva)')
        ylabel('Visual estimate location (dva)')

end

if save_fig
    flnm = sprintf('sub%i_loc%s',sub, ses);
    saveas(gca, fullfile(out_dir, flnm),'png')
end

%% plot variance

%% plot variance